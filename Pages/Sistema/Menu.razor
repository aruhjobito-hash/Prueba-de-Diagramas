@page "/Menu"
@inject HttpClient Http
@inherits MainLayout
@using Models.Sistema
@using Clases.Sistema
@using Controllers.Sistema


<h3>Menu</h3>

<!-- Wrap the button inside a form -->
<form method="post" @onsubmit="HandleSubmit">
    <!-- Button to reload data -->
    <button type="button" class="btn sbold green" @onclick="async () => await LoadMenuData()">Reload Menu</button>
</form>

@if (menuData != null)
{
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption font-dark">
                <i class="icon-settings font-dark"></i>
                <span class="caption-subject bold uppercase"> Managed Table</span>
            </div>
            <div class="actions">
                <div class="btn-group btn-group-devided" data-toggle="buttons">
                    <label class="btn btn-transparent dark btn-outline btn-circle btn-sm active">
                        <input type="radio" name="options" class="toggle" id="option1">Actions
                    </label>
                    <label class="btn btn-transparent dark btn-outline btn-circle btn-sm">
                        <input type="radio" name="options" class="toggle" id="option2">Settings
                    </label>
                </div>
            </div>
        </div>
        <div class="portlet-body">
            <div class="table-toolbar">
                <div class="row">
                    <div class="col-md-6">
                        <div class="btn-group">
                            <button id="sample_editable_1_new" class="btn sbold green">
                                Add New
                                <i class="fa fa-plus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="btn-group pull-right">
                            <button class="btn green btn-outline dropdown-toggle" data-toggle="dropdown">
                                Tools
                                <i class="fa fa-angle-down"></i>
                            </button>
                            <ul class="dropdown-menu pull-right">
                                <li><a href="javascript:;"><i class="fa fa-print"></i> Print</a></li>
                                <li><a href="javascript:;"><i class="fa fa-file-pdf-o"></i> Save as PDF</a></li>
                                <li><a href="javascript:;"><i class="fa fa-file-excel-o"></i> Export to Excel</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Render the menu data -->
            <div class="table-scrollable">
                <table class="table table-striped table-bordered table-hover table-checkable order-column dataTable no-footer" id="sample_1">
                    <thead>
                        <tr>
                            <th>Menu</th>
                            <th>SubMenu</th>
                            <th>Funcion</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var menu in menuData)
                        {
                            <tr>
                                <td>@menu.Menu</td>
                                <td>
                                    @foreach (var subMenu in menu.SubMenu)
                                    {
                                        <div>@subMenu.NombreSubMenu</div>
                                        @foreach (var desglose in subMenu.Desglose)
                                        {
                                            <div>@desglose.Name - <button @onclick="@(() => ExecuteFunction(desglose.Funcion))">Execute</button></div>
                                        }
                                    }
                                </td>
                                <td></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@code {
    private List<MenuClass> menuData;
    private MenuController menuCo =new();
    protected override async Task OnInitializedAsync()
    {
        // Load menu data when the page is initialized
        await LoadMenuData();
        await menuCo.CargaMenu();
    }

    private async Task LoadMenuData()
    {
        var apiLeon = new APILEON();
        var menuRequest = new requestMenuModel
            {
                Id = 1,
                Perfil = "pTI_Jefatura",
                TipoWin = "0",
                TipoWeb="1",
                IdUser = "JosAra"
            };

        var response = await apiLeon.APILEONPOST<List<MenuClass>>("/api/Sistemas/Menu", menuRequest);
        await menuCo.CargaMenu();

        if (response != null)
        {
            menuData = response;
            StateHasChanged(); // Forces the component to re-render
        }
    }

    private void ExecuteFunction(string function)
    {
        Console.WriteLine($"Executing: {function}");
    }

    // Optional: Handle form submission if needed
    private void HandleSubmit()
    {
        // Prevent form from submitting if you don't need it
        Console.WriteLine("Form submitted, but no action taken.");
    }
}
